{"version":3,"file":"static/js/961.a186e283.chunk.js","mappings":"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","sources":["pages/Cast/Cast.jsx","pages/MovieDetails/MovieDetails.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["// import { useParams } from 'react-router-dom';\n\nconst Cast = ({ cast }) => {\n  // const { movieId } = useParams();\n\n  return (\n    <div>\n      {cast.map(actor => (\n        <div key={actor.id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n            alt={actor.name}\n          />\n          <p>Name: {actor.name}</p>\n          <p>Character: {actor.character}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import Cast from 'pages/Cast/Cast';\nimport Reviews from 'pages/Reviews/Reviews';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n  getCastApi,\n  getMovieDetailsApi,\n  getReviewsApi,\n} from '../../api/movies';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n\n  const getMovieDetails = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      console.log('Movie ID:', movieId);\n      setError('');\n      const data = await getMovieDetailsApi(movieId);\n      console.log('Movie details:', data);\n      setMovie(data);\n    } catch (error) {\n      console.log('Error fetching movie details:', error);\n      setError('Error fetching movie details');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  const getCast = useCallback(async () => {\n    try {\n      const castData = await getCastApi(movieId);\n      setCast(castData.cast);\n    } catch (error) {\n      console.error('Error fetching cast:', error);\n    }\n  }, [movieId]);\n\n  const getReviews = useCallback(async () => {\n    try {\n      const reviewsData = await getReviewsApi(movieId);\n      setReviews(reviewsData.results);\n    } catch (error) {\n      console.error('Error fetching reviews:', error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    getMovieDetails();\n  }, [getMovieDetails]);\n\n  return (\n    <div>\n      <Link to=\"/\">Go Back</Link>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {movie && (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <h2>{movie.title}</h2>\n          <p>Year: {movie.release_date}</p>\n          <p>User Score: {movie.vote_average}</p>\n          <p>Overview: {movie.overview}</p>\n          <p>Genres: {movie.genres.map(genre => genre.name).join(', ')}</p>\n          <h3>Additional Information</h3>\n          <ul>\n            <li>\n              <Link to={`/movies/${movieId}/cast`} onClick={getCast}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to={`/movies/${movieId}/reviews`} onClick={getReviews}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          {cast && <Cast cast={cast} />}\n          {reviews && <Reviews reviews={reviews} />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React from 'react';\n\nconst Reviews = ({ reviews }) => {\n  return (\n    <div>\n      {reviews.map(review => (\n        <div key={review.id}>\n          <h3>{review.author}</h3>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["_ref","cast","_jsx","children","map","actor","_jsxs","src","concat","profile_path","alt","name","character","id","movieId","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","movie","setMovie","_useState7","_useState8","setCast","_useState9","_useState10","reviews","setReviews","getMovieDetails","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","console","log","getMovieDetailsApi","sent","t0","finish","stop","getCast","_callee2","castData","_context2","getCastApi","getReviews","_callee3","reviewsData","_context3","getReviewsApi","results","useEffect","Link","to","poster_path","title","release_date","vote_average","overview","genres","genre","join","onClick","Cast","Reviews","review","author","content"],"sourceRoot":""}