{"version":3,"file":"static/js/961.ba80efcb.chunk.js","mappings":"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","sources":["pages/Cast/Cast.jsx","pages/MovieDetails/MovieDetails.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["// import { useParams } from 'react-router-dom';\n\nconst Cast = ({ cast }) => {\n  // const { movieId } = useParams();\n\n  return (\n    <div>\n      {cast.map(actor => (\n        <div key={actor.id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n            alt={actor.name}\n          />\n          <p>Name: {actor.name}</p>\n          <p>Character: {actor.character}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import Cast from 'pages/Cast/Cast';\nimport Reviews from 'pages/Reviews/Reviews';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n  getCastApi,\n  getMovieDetailsApi,\n  getReviewsApi,\n} from '../../api/movies';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [showReviews, setShowReviews] = useState(false);\n\n  const getMovieDetails = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      console.log('Movie ID:', movieId);\n      setError('');\n      const data = await getMovieDetailsApi(movieId);\n      console.log('Movie details:', data);\n      setMovie(data);\n    } catch (error) {\n      console.log('Error fetching movie details:', error);\n      setError('Error fetching movie details');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  const getCast = useCallback(async () => {\n    try {\n      const castData = await getCastApi(movieId);\n      setCast(castData.cast);\n    } catch (error) {\n      console.error('Error fetching cast:', error);\n    }\n  }, [movieId]);\n\n  const getReviews = useCallback(async () => {\n    try {\n      const reviewsData = await getReviewsApi(movieId);\n      setReviews(reviewsData.results);\n    } catch (error) {\n      console.error('Error fetching reviews:', error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    getMovieDetails();\n  }, [getMovieDetails]);\n\n  const handleGoBack = () => {\n    window.history.back();\n  };\n\n  return (\n    <div>\n      {/* //   <Link to=\"/\">Go Back</Link> */}\n      <button onClick={handleGoBack}>Go Back</button>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {movie && (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <h2>{movie.title}</h2>\n          <p>Year: {movie.release_date}</p>\n          <p>User Score: {movie.vote_average}</p>\n          <p>Overview: {movie.overview}</p>\n          <p>Genres: {movie.genres.map(genre => genre.name).join(', ')}</p>\n          <h3>Additional Information</h3>\n          <ul>\n            <li>\n              <Link to={`/movies/${movieId}/cast`} onClick={getCast}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link\n                to={`/movies/${movieId}/reviews`}\n                onClick={() => {\n                  getReviews();\n                  setShowReviews(true);\n                }}\n              >\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          {cast && <Cast cast={cast} />}\n          {showReviews && reviews.length > 0 && <Reviews reviews={reviews} />}\n          {showReviews && reviews.length === 0 && (\n            <p>We don't have any reviews for this movie.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React from 'react';\n\nconst Reviews = ({ reviews }) => {\n  return (\n    <div>\n      {reviews.map(review => (\n        <div key={review.id}>\n          <h3>{review.author}</h3>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["_ref","cast","_jsx","children","map","actor","_jsxs","src","concat","profile_path","alt","name","character","id","movieId","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","movie","setMovie","_useState7","_useState8","setCast","_useState9","_useState10","reviews","setReviews","_useState11","_useState12","showReviews","setShowReviews","getMovieDetails","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","console","log","getMovieDetailsApi","sent","t0","finish","stop","getCast","_callee2","castData","_context2","getCastApi","getReviews","_callee3","reviewsData","_context3","getReviewsApi","results","useEffect","onClick","window","history","back","poster_path","title","release_date","vote_average","overview","genres","genre","join","Link","to","Cast","length","Reviews","review","author","content"],"sourceRoot":""}